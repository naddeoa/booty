##
## Targets
##

essentials: apt(wget git vim autokey-gtk silversearcher-ag gawk xclip
    gnome-disk-utility cryptsetup build-essential dconf-editor ripgrep xdotool
    luarocks cmake libterm-readkey-perl expect ssh curl fzf)

files.git -> essentials
files.git: git(naddeo@do.naddeo.org:~/git/files, ~/files)

notes.git -> essentials
notes.git: git(naddeo@do.naddeo.org:~/git/notes, ~/notes)

ssh_conf -> essentials
ssh_conf:
    setup: ssh-keygen
    is_setup: test -f ~/.ssh/id_rsa.pub

## Terminal stuff

nvim -> essentials
nvim: 
    setup:
        curl -L https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz -o ~/nvim-linux64.tar.gz
        tar -xzf ~/nvim-linux64.tar.gz -C ~
    is_setup: test -f ~/nvim-linux64/bin/nvim

nvim_config -> files.git
nvim_config: ln(~/files/conf/nvim, ~/.config/nvim) 

unit.nvim -> essentials
unit.nvim: git(https://github.com/naddeoa/nvim-pytest.git, ~/workspace/nvim-unit)

packer -> essentials
packer: git_shallow(https://github.com/wbthomason/packer.nvim, ~/.local/share/nvim/site/pack/packer/start/packer.nvim)

terminal -> essentials
terminal: apt(kitty fish tmux)

omf -> terminal
omf:
    setup:
        curl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install > /tmp/fish-install 
        chmod +x /tmp/fish-install
        /tmp/fish-install --noninteractive
    is_setup: which fish && fish -c 'omf --version'

omf_config -> omf
omf_config: 
    setup: fish -c "omf install fzf clearance nvm pyenv"
    is_setup: 
        which fish && fish -c "omf list | grep fzf"
        which fish && fish -c "omf list | grep clearance"

shell_conf -> essentials
shell_conf: 
    setup: sudo chsh -s /usr/bin/fish $(USER)
    is_setup: cat /etc/passwd | grep anthony | grep fish

tpm -> terminal
tpm: git(https://github.com/tmux-plugins/tpm, ~/.tmux/plugins/tpm)

agave_font -> essentials
agave_font:
    setup:
        curl https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/Agave.zip -o /tmp/agave.zip
        mkdir -p ~/.fonts
        unzip /tmp/agave.zip -d ~/.fonts/
        fc-cache -f -v
    is_setup: fc-list | grep Agave


## Dotfile symlinks
files.git <- ln_Code ln_autokey ln_ctags ln_gitconfig ln_tmux.conf ln_toprc ln_xbindkeysrc ln_Xmodmap ln_kitty.conf ln_fish_history ln_fish_timer ln_config.fish
ln_Code: ln(~/files/conf/Code, ~/.config/Code)
ln_autokey: ln(~/files/conf/autokey, ~/.config/autokey)
ln_ctags: ln(~/files/conf/.ctags, ~/.ctags)
ln_gitconfig: ln(~/files/conf/.gitconfig, ~/.gitconfig)
ln_tmux.conf: ln(~/files/conf/.tmux.conf, ~/.tmux.conf)
ln_toprc: ln(~/files/conf/.toprc, ~/.toprc)
ln_xbindkeysrc: ln(~/files/conf/.xbindkeysrc, ~/.xbindkeysrc)
ln_Xmodmap: ln(~/files/conf/.Xmodmap, ~/.Xmodmap)
ln_kitty.conf: ln(~/files/conf/kitty.conf, ~/.config/kitty/kitty.conf)
ln_config.fish: ln(~/files/conf/.config/fish/config.fish, ~/.config/fish/config.fish)
ln_fish_history: ln(~/files/conf/.local/share/fish/fish_history, ~/.local/share/fish/fish_history)
ln_fish_timer: ln(~/files/conf/fish_command_timer.fish, ~/.config/fish/conf.d/fish_command_timer.fish)

## Python
recipe pyenv(version):
    setup:
        ~/.pyenv/bin/pyenv install $((version))
    is_setup:
        ~/.pyenv/bin/pyenv versions | grep $((version))

pipx -> essentials terminal
pipx: apt(pipx)

pyenv -> essentials terminal pipx omf_config 
pyenv <- python3.7 python3.8 python3.9 python3.10
pyenv:
    setup: 
        apt(build-essential libssl-dev zlib1g-dev libncurses5-dev libncursesw5-dev
            libreadline-dev libsqlite3-dev libgdbm-dev libdb5.3-dev libbz2-dev
            libexpat1-dev liblzma-dev tk-dev libffi-dev)
        curl https://pyenv.run | bash
    is_setup: test -e ~/.pyenv/bin/pyenv

python3.7: pyenv(3.7)
python3.8: pyenv(3.8)
python3.9: pyenv(3.9)
python3.10: pyenv(3.10)

poetry -> pipx
poetry: pipx(poetry)


## node

nvm -> essentials terminal omf_config 
nvm:
    setup:
        PROFILE=/dev/null bash -c 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash'
    is_setup:
        fish -c "nvm --version"

node -> nvm
node:
    setup: 
        fish -c "nvm install --lts"
        fish -c "nvm use --lts"
    is_setup: 
        fish -c "nvm exec --lts node --version"

